@startuml "Class Diagram"

skin rose

skinparam class {
    BackgroundColor<<Model>> #FFB2B2
}

skinparam class {
    BackgroundColor<<Controller>> #FFFBD7
}

skinparam class {
    BackgroundColor<<View>> #D9FFB2
}

class Flight <<Model>> {
    + id: Integer
    + departure_airport: Airport
    + arrival_airport: Airport
    + departure_time: DateTime
    + arrival_time: DateTime
    + aircraft: Aircraft
    + __str__(): str
}

class Aircraft<<Model>> {
    + model: String
    + capacity: Integer
    + code: String
    + __str__(): str
}

class Airport<<Model>> {
    + code: String
    + city: String
    + name: String
    + latitude: Float
    + longitude: Float
    + __str__(): str
}

class Passenger<<Model>> {
    + name: String
    + date_of_birth: Date
    + sex: Sex
    + email: Email
    + phone: String
    + citizen_identify_id: String
    + relation: Passenger
    + __str__(): str
}

class Booking<<Model>> {
    + flight: Flight
    + passengers: Passenger[]
    + booking_date: DateTime
    + total_fare: Decimal
    + __str__(): str
}

class BookingView<<View>> {
    - permission_classes: list[IsAuthenticated]

    + get(request: HttpRequest) -> JsonResponse
}

class FlightAdmin<<View>> {
    + form: FlightForm
    + list_display: str[]
    + search_fields: str[]
    + date_hierarchy: str
    + list_filter: str[]
    + list_per_page: int
    + total_passenger(): int
    + available_seat(): int
    + capacity(): int
    + aircraft_code(): str
    + duration_time(): str
    + has_change_permission(): bool
    + has_delete_permission(): bool
}

class AircraftAdmin<<View>> {
    + list_display: str[]
    + search_fields: str[]
    + list_filter: str[]
    + list_per_page: int
}

class AirportAdmin<<View>> {
    + list_display: str[]
    + search_fields: str[]
    + list_filter: str[]
    + list_per_page: int
}

class PassengerAdmin<<View>> {
    + list_display: str[]
    + search_fields: str[]
    + list_per_page: int
}

class BookingAdmin<<View>> {
    + form: BookingForm
    + filter_horizontal: str[]
    + search_fields: str[]
    + list_display: str[]
    + list_filter: str[]
    + get_queryset(): QuerySet
    + has_change_permission(): bool
    + has_delete_permission(): bool
}

class BookingForm <<View>> {
    + departure: ChoiceField
    + arrival: ChoiceField
    + departure_time: DateField
    + quantity: IntegerField
    + total_fare: DecimalField
    + Meta: class

    + __init__(*args, **kwargs)
    + clean() -> Dict[str, Union[str, int]]
    + get_available_seats(flight: Union[str, Flight]) -> int
}

class FlightForm <<View>> {
    - request: Union[None, "HttpRequest"]
    + __init__(*args, **kwargs)
    + clean() -> Dict[str, Union[str, datetime]]
    + Meta: class
}

FlightAdmin --> Flight
AircraftAdmin --> Aircraft
AirportAdmin --> Airport
PassengerAdmin --> Passenger
BookingAdmin --> Booking
BookingView --> Booking
BookingForm --> BookingAdmin
FlightForm --> FlightAdmin

Flight "*" --o "1" Airport: departure_airport
Flight "*" --o "1" Airport: arrival_airport
Flight "*" --o "1" Aircraft
Passenger "0,1" ..o "1" Passenger: relation
Booking "*" --* "1" Flight
Booking "1" o-- "*" Passenger
@enduml
