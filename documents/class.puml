@startuml "class uml"

skin rose

skinparam class {
BackgroundColor<<Model>> #FFB2B2
}

skinparam class {
BackgroundColor<<Controller>> #FFFBD7
}

skinparam class {
BackgroundColor<<View>> #D9FFB2
}


class Flight <<Model>> {
    + id: Integer
    + departure_airport: Airport
    + arrival_airport: Airport
    + departure_time: DateTime
    + arrival_time: DateTime
    + aircraft: Aircraft
    ~ __str__()
}

class Aircraft<<Model>> {
    + model: String
    + capacity: Integer
    + code: String
    ~ __str__()
}

class Airport<<Model>> {
    + code: String
    + city: String
    + name: String
    + latitude: Float
    + longitude: Float
    ~ __str__()
}

class Passenger<<Model>> {
    + name: String
    + date_of_birth: Date
    + sex: Sex
    + email: Email
    + phone: String
    + citizen_identify_id: String
    + relation: Passenger
    ~ __str__()
}

class Booking<<Model>> {
    + flight: Flight
    + passengers: Passenger[]
    + booking_date: DateTime
    + total_fare: Decimal
    ~ __str__()
}

class FlightListView<<View>> {
    + flight_list()
}

class FlightDetailView<<View>> {
    + flight_detail()
}

class AirportListView<<View>> {
    + airport_list()
}

class AirportDetailView<<View>> {
    + airport_detail()
}

class AircraftListView<<View>> {
    + aircraft_list()
}

class AircraftDetailView<<View>> {
    + aircraft_detail()
}

class PassengerListView<<View>> {
    + passenger_list()
}

class PassengerDetailView<<View>> {
    + passenger_detail()
}

class BookingListView<<View>> {
    + booking_list()
}

class BookingDetailView<<View>> {
    + booking_detail()
}

class FlightController<<Controller>> {
    + flight_list(request)
    + flight_detail(request, pk)
    + create_flight(request)
    + update_flight(request, pk)
    + delete_flight(request, pk)
}

class AirportController<<Controller>> {
    + airport_list(request)
    + airport_detail(request, pk)
    + create_airport(request)
    + update_airport(request, pk)
    + delete_airport(request, pk)
}

class AircraftController<<Controller>> {
    + aircraft_list(request)
    + aircraft_detail(request, pk)
    + create_aircraft(request)
    + update_aircraft(request, pk)
    + delete_aircraft(request, pk)
}

class PassengerController<<Controller>> {
    + passenger_list(request)
    + passenger_detail(request, pk)
    + create_passenger(request)
    + update_passenger(request, pk)
    + delete_passenger(request, pk)
}

class BookingController<<Controller>> {
    + booking_list(request)
    + booking_detail(request, pk)
    + create_booking(request)
    + update_booking(request, pk)
    + delete_booking(request, pk)
}

FlightListView --> FlightController
FlightDetailView --> FlightController
AirportListView --> AirportController
AirportDetailView --> AirportController
AircraftListView --> AircraftController
AircraftDetailView --> AircraftController
PassengerListView --> PassengerController
PassengerDetailView --> PassengerController
BookingListView --> BookingController
BookingDetailView --> BookingController

FlightController --> Flight
AirportController --> Airport
AircraftController --> Aircraft
PassengerController --> Passenger
BookingController --> Booking

Passenger ..o Passenger: relation
Flight --o Airport: departure_airport
Flight --o Airport: arrival_airport
Flight --o Aircraft
Booking --o Flight
Booking --o Passenger

@enduml
